name: SDS MCP Pipeline

on:
  push:
    branches:
      - rc
      - develop
    tags:
      - "prod-v*"

env:
  DOCKER_REPO: "netpowerasdockerhub/sds"
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SUDO_PWD: ${{ secrets.SUDO_PWD }}

jobs:
  build_and_push:
    runs-on: sds-runners
    outputs:
      environment: ${{ steps.set-env.outputs.environment }}
      tag_name: ${{ steps.set-env.outputs.tag_name }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Determine Environment
        id: set-env
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            export environment=develop
          elif [[ "${GITHUB_REF}" == "refs/heads/rc" ]]; then
            export environment=rc
          elif [[ "${GITHUB_REF}" == refs/tags/prod-v* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
            export environment=prod
            echo "tag_name=${TAG_NAME}" >> $GITHUB_OUTPUT
            echo "docker_tag_version=${{ env.DOCKER_REPO }}:sds_mcp.${TAG_NAME}" >> $GITHUB_OUTPUT
          else
            export environment=test
          fi

          echo "environment=$environment" >> $GITHUB_OUTPUT
          echo "docker_tag=${{ env.DOCKER_REPO }}:sds_mcp.$environment.latest" >> $GITHUB_OUTPUT
      
      - name: Build and Push Docker Image
        run: |
          if [[ "${{ steps.set-env.outputs.environment }}" == "develop" || "${{ steps.set-env.outputs.environment }}" == "rc" ]]; then
            docker build -t ${{ steps.set-env.outputs.docker_tag }} -f ./Dockerfile .
            timeout 300 docker push ${{ steps.set-env.outputs.docker_tag }}

          elif [[ "${{ steps.set-env.outputs.environment }}" == "prod" ]]; then
            docker build -t ${{ steps.set-env.outputs.docker_tag }} -f ./Dockerfile .
            timeout 300 docker push ${{ steps.set-env.outputs.docker_tag }}

            docker build -t ${{ steps.set-env.outputs.docker_tag_version }} -f ./Dockerfile .
            timeout 300 docker push ${{ steps.set-env.outputs.docker_tag_version }}
          fi
          
      - name: Release new version
        uses: appleboy/ssh-action@v1.2.1
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_KEY }}
          envs: SUDO_PWD
          script: |
            echo "Releasing to ${{ steps.set-env.outputs.environment }}..."
            if [[ "${{ steps.set-env.outputs.environment }}" == "staging" ]]; then
              echo "$SUDO_PWD" | sudo -S sh /sds/toolkit/sds/k8s/sds_staging/sds_mcp/sds_mcp.sh staging $SUDO_PWD
            elif [[ "${{ steps.set-env.outputs.environment }}" == "rc" ]]; then
              echo $SUDO_PWD | sudo -S sh /sds/toolkit/sds/k8s/sds_rc/sds_mcp/sds_mcp.sh rc $SUDO_PWD
            fi
